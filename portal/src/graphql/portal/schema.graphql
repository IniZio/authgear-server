"""Authgear app"""
type App implements Node {
  """"""
  domains: [Domain!]!

  """"""
  effectiveAppConfig: AppConfig!

  """The ID of an object"""
  id: ID!

  """"""
  rawAppConfig: AppConfig!

  """"""
  rawConfigFile(path: String!): String!

  """"""
  rawSecretConfig: SecretConfig!
}

"""The `AppConfig` scalar type represents an app config JSON object"""
scalar AppConfig

"""A configuration file to update/create."""
input AppConfigFile {
  """New content of the file."""
  content: String!

  """Path of the file."""
  path: String!
}

"""A connection to a list of items."""
type AppConnection {
  """Information to aid in pagination."""
  edges: [AppEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Total number of nodes in the connection."""
  totalCount: Int
}

"""An edge in a connection"""
type AppEdge {
  """ cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: App
}

""""""
input CreateAppInput {
  """ID of the new app."""
  id: String!
}

""""""
type CreateAppPayload {
  """"""
  app: App!
}

""""""
input CreateDomainInput {
  """Target app ID."""
  appID: ID!

  """Domain name."""
  domain: String!
}

""""""
type CreateDomainPayload {
  """"""
  app: App!

  """"""
  domain: Domain!
}

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

""""""
input DeleteDomainInput {
  """Target app ID."""
  appID: ID!

  """Domain ID."""
  domainID: String!
}

""""""
type DeleteDomainPayload {
  """"""
  app: App!
}

"""DNS domain of an app"""
type Domain {
  """"""
  apexDomain: String!

  """"""
  createdAt: DateTime!

  """"""
  domain: String!

  """"""
  id: String!

  """"""
  isCustom: Boolean!

  """"""
  isVerified: Boolean!

  """"""
  verificationDNSRecord: String!
}

""""""
type Mutation {
  """Create new app"""
  createApp(input: CreateAppInput!): CreateAppPayload!

  """Create domain for target app"""
  createDomain(input: CreateDomainInput!): CreateDomainPayload!

  """Delete domain of target app"""
  deleteDomain(input: DeleteDomainInput!): DeleteDomainPayload!

  """Update app configuration files"""
  updateAppConfig(input: UpdateAppConfigInput!): App!

  """Request verification of a domain of target app"""
  verifyDomain(input: VerifyDomainInput!): VerifyDomainPayload!
}

"""An object with an ID"""
interface Node {
  """The id of the object"""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

""""""
type Query {
  """All apps accessible by the viewer"""
  apps(after: String, before: String, first: Int, last: Int): AppConnection

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node

  """The current viewer"""
  viewer: User
}

"""The `SecretConfig` scalar type represents a secret config JSON object"""
scalar SecretConfig

""""""
input UpdateAppConfigInput {
  """App ID to update."""
  appID: ID!

  """Path to configuration files to delete."""
  deleteFiles: [String!]

  """Configuration files to update/create."""
  updateFiles: [AppConfigFile!]
}

"""Portal User"""
type User implements Node {
  """The ID of an object"""
  id: ID!
}

""""""
input VerifyDomainInput {
  """Target app ID."""
  appID: ID!

  """Domain ID."""
  domainID: String!
}

""""""
type VerifyDomainPayload {
  """"""
  app: App!

  """"""
  domain: Domain!
}

