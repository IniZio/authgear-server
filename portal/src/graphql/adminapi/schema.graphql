"""An edge in a connection"""
type AuthenticatorEdge {
  """ cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Authenticator
}

"""A connection to a list of items."""
type IdentityConnection {
  """Information to aid in pagination."""
  edges: [IdentityEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Total number of nodes in the connection."""
  totalCount: Int
}

""""""
type Identity implements Node & Entity {
  """"""
  claims(names: [String!]): JSONObject!

  """The creation time of entity"""
  createdAt: DateTime!

  """The ID of an object"""
  id: ID!

  """"""
  type: String!

  """The update time of entity"""
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  edges: [UserEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Total number of nodes in the connection."""
  totalCount: Int
}

"""Authgear user"""
type User implements Node & Entity {
  """"""
  authenticators(before: String, after: String, first: Int, last: Int): AuthenticatorConnection

  """The creation time of entity"""
  createdAt: DateTime!

  """The ID of an object"""
  id: ID!

  """"""
  identities(before: String, after: String, first: Int, last: Int): IdentityConnection

  """The last login time of user"""
  lastLoginAt: DateTime

  """The update time of entity"""
  updatedAt: DateTime!
}

""""""
interface Entity {
  """The ID of entity"""
  id: ID!

  """The creation time of entity"""
  createdAt: DateTime!

  """The update time of entity"""
  updatedAt: DateTime!
}

"""An edge in a connection"""
type IdentityEdge {
  """ cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Identity
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

"""A connection to a list of items."""
type AuthenticatorConnection {
  """Information to aid in pagination."""
  edges: [AuthenticatorEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Total number of nodes in the connection."""
  totalCount: Int
}

"""The `JSONObject` scalar type represents an arbitrary JSON object"""
scalar JSONObject

""""""
type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node

  """All users"""
  users(before: String, after: String, first: Int, last: Int): UserConnection
}

"""An edge in a connection"""
type UserEdge {
  """ cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: User
}

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

""""""
type Authenticator implements Node & Entity {
  """"""
  claims(names: [String!]): JSONObject!

  """The creation time of entity"""
  createdAt: DateTime!

  """The ID of an object"""
  id: ID!

  """"""
  type: String!

  """The update time of entity"""
  updatedAt: DateTime!
}

"""An object with an ID"""
interface Node {
  """The id of the object"""
  id: ID!
}

