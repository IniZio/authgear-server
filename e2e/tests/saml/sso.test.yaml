---
name: SAML SSO
focus: true
authgear.yaml:
  override: |
    saml:
      signing:
        key_id: "-jeTn3EEV5bJUOMDQU04zLlkWFZK3BDODkfh40FX8K0"
      service_providers:
        - client_id: e2e
          nameid_format: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
          nameid_attribute_pointer: /preferred_username
          acs_urls:
            - https://samlsp.localhost/acs
          destination: http://samlsp.localhost/destination
          recipient: http://samlsp.localhost/recipient
          audience: https://samlsp.localhost
          assertion_valid_duration: 1h
          slo_enabled: true
          slo_callback_url: https://samlsp.localhost/sls
    authentication_flow:
      # We don't want a complicated login flow for this test, only one identify step is enough.
      login_flows:
        - name: default
          steps:
          - name: identify
            type: identify
            one_of:
            - identification: username
before:
  - type: user_import
    user_import: users.json
steps:
  # Send a valid saml request to the login endpoint
  # Expect:
  #  1. The server should be able to parse the request
  #  2. Redirect to the authui to continue sign in
  - action: "saml_request"
    saml_request: |
      <samlp:AuthnRequest
        xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
        xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
        ForceAuthn="false"
        ID="a506045340df4e2290640daf189f4b5177f691823"
        IssueInstant="3000-10-02T08:25:59Z"
        AssertionConsumerServiceURL="https://samlsp.localhost/acs"
        ProtocolBinding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
        Version="2.0"
        ><saml:Issuer>urn:e2e.localhost</saml:Issuer></samlp:AuthnRequest
      >
    saml_request_destination: "/saml2/login/e2e"
    saml_request_binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
    saml_output:
      http_status: 302
      redirect_path: /_internals/oauth_entrypoint
  # Follow the redirect, until user input required
  - action: "http_request"
    http_request_method: GET
    http_request_url: "{{ .prev.result.http_response_headers.location }}"
    http_output:
      http_status: 200
  # Login with username
  - action: "http_request"
    http_request_method: POST
    http_request_url: "http://127.0.0.1:4000/login"
    http_request_headers:
      "Content-Type": "application/x-www-form-urlencoded"
    http_request_body: "x_login_id_input_type=text&x_login_id=samltest01&x_action=login_id"
    http_output:
      http_status: 200
