// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"github.com/authgear/authgear-server/pkg/lib/config/configsource"
	"github.com/authgear/authgear-server/pkg/portal/deps"
	"github.com/authgear/authgear-server/pkg/util/clock"
)

// Injectors from wire.go:

func newConfigSourceController(p *deps.RootProvider) *configsource.Controller {
	config := p.ConfigSourceConfig
	factory := p.LoggerFactory
	localFSLogger := configsource.NewLocalFSLogger(factory)
	localFS := &configsource.LocalFS{
		Logger: localFSLogger,
		Config: config,
	}
	kubernetesLogger := configsource.NewKubernetesLogger(factory)
	clock := _wireSystemClockValue
	environmentConfig := p.EnvironmentConfig
	trustProxy := environmentConfig.TrustProxy
	kubernetes := &configsource.Kubernetes{
		Logger:     kubernetesLogger,
		Clock:      clock,
		TrustProxy: trustProxy,
		Config:     config,
	}
	controller := configsource.NewController(config, localFS, kubernetes)
	return controller
}

var (
	_wireSystemClockValue = clock.NewSystemClock()
)
