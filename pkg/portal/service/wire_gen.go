// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package service

import (
	"context"
	"github.com/authgear/authgear-server/pkg/lib/audit"
	"github.com/authgear/authgear-server/pkg/lib/deps"
	"github.com/authgear/authgear-server/pkg/lib/infra/db/auditdb"
	"github.com/authgear/authgear-server/pkg/portal/model"
	"github.com/authgear/authgear-server/pkg/util/log"
)

// Injectors from wire.go:

func newAuditSink(ctx context.Context, app *model.App, auditDatabase *auditdb.WriteHandle, loggerFactory *log.Factory) *audit.Sink {
	logger := audit.NewLogger(loggerFactory)
	config := ProvideAuthgearAppConfig(app)
	secretConfig := config.SecretConfig
	auditDatabaseCredentials := deps.ProvideAuditDatabaseCredentials(secretConfig)
	appConfig := config.AppConfig
	appID := appConfig.ID
	sqlBuilderApp := auditdb.NewSQLBuilderApp(auditDatabaseCredentials, appID)
	writeSQLExecutor := auditdb.NewWriteSQLExecutor(ctx, auditDatabase)
	writeStore := &audit.WriteStore{
		SQLBuilder:  sqlBuilderApp,
		SQLExecutor: writeSQLExecutor,
	}
	sink := &audit.Sink{
		Logger:   logger,
		Database: auditDatabase,
		Store:    writeStore,
	}
	return sink
}
