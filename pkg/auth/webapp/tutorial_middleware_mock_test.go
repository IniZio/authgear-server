// Code generated by MockGen. DO NOT EDIT.
// Source: tutorial_middleware.go

// Package webapp is a generated GoMock package.
package webapp

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTutorialMiddlewareTutorialCookie is a mock of TutorialMiddlewareTutorialCookie interface.
type MockTutorialMiddlewareTutorialCookie struct {
	ctrl     *gomock.Controller
	recorder *MockTutorialMiddlewareTutorialCookieMockRecorder
}

// MockTutorialMiddlewareTutorialCookieMockRecorder is the mock recorder for MockTutorialMiddlewareTutorialCookie.
type MockTutorialMiddlewareTutorialCookieMockRecorder struct {
	mock *MockTutorialMiddlewareTutorialCookie
}

// NewMockTutorialMiddlewareTutorialCookie creates a new mock instance.
func NewMockTutorialMiddlewareTutorialCookie(ctrl *gomock.Controller) *MockTutorialMiddlewareTutorialCookie {
	mock := &MockTutorialMiddlewareTutorialCookie{ctrl: ctrl}
	mock.recorder = &MockTutorialMiddlewareTutorialCookieMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTutorialMiddlewareTutorialCookie) EXPECT() *MockTutorialMiddlewareTutorialCookieMockRecorder {
	return m.recorder
}

// SetAll mocks base method.
func (m *MockTutorialMiddlewareTutorialCookie) SetAll(rw http.ResponseWriter) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetAll", rw)
}

// SetAll indicates an expected call of SetAll.
func (mr *MockTutorialMiddlewareTutorialCookieMockRecorder) SetAll(rw interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAll", reflect.TypeOf((*MockTutorialMiddlewareTutorialCookie)(nil).SetAll), rw)
}
