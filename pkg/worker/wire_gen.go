// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package worker

import (
	"github.com/authgear/authgear-server/pkg/lib/deps"
	"github.com/authgear/authgear-server/pkg/lib/infra/mail"
	"github.com/authgear/authgear-server/pkg/lib/infra/sms"
	"github.com/authgear/authgear-server/pkg/lib/infra/task"
	"github.com/authgear/authgear-server/pkg/lib/infra/task/executor"
	"github.com/authgear/authgear-server/pkg/worker/tasks"
)

// Injectors from wire.go:

func newInProcessExecutor(p *deps.RootProvider) *executor.InProcessExecutor {
	factory := p.LoggerFactory
	inProcessExecutorLogger := executor.NewInProcessExecutorLogger(factory)
	restoreTaskContext := deps.ProvideRestoreTaskContext(p)
	inProcessExecutor := &executor.InProcessExecutor{
		Logger:         inProcessExecutorLogger,
		RestoreContext: restoreTaskContext,
	}
	return inProcessExecutor
}

func newSendMessagesTask(p *deps.TaskProvider) task.Task {
	appProvider := p.AppProvider
	factory := appProvider.LoggerFactory
	logger := mail.NewLogger(factory)
	rootProvider := appProvider.RootProvider
	environmentConfig := rootProvider.EnvironmentConfig
	devMode := environmentConfig.DevMode
	config := appProvider.Config
	secretConfig := config.SecretConfig
	smtpServerCredentials := deps.ProvideSMTPServerCredentials(secretConfig)
	dialer := mail.NewGomailDialer(smtpServerCredentials)
	sender := &mail.Sender{
		Logger:       logger,
		DevMode:      devMode,
		GomailDialer: dialer,
	}
	smsLogger := sms.NewLogger(factory)
	appConfig := config.AppConfig
	messagingConfig := appConfig.Messaging
	twilioCredentials := deps.ProvideTwilioCredentials(secretConfig)
	twilioClient := sms.NewTwilioClient(twilioCredentials)
	nexmoCredentials := deps.ProvideNexmoCredentials(secretConfig)
	nexmoClient := sms.NewNexmoClient(nexmoCredentials)
	client := &sms.Client{
		Logger:          smsLogger,
		DevMode:         devMode,
		MessagingConfig: messagingConfig,
		TwilioClient:    twilioClient,
		NexmoClient:     nexmoClient,
	}
	sendMessagesLogger := tasks.NewSendMessagesLogger(factory)
	sendMessagesTask := &tasks.SendMessagesTask{
		EmailSender: sender,
		SMSClient:   client,
		Logger:      sendMessagesLogger,
	}
	return sendMessagesTask
}
